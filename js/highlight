#!/usr/bin/env node
/* vim: filetype=javascript :
*/

var sg              = require('./utils/sg');
var _               = require('underscore');
var ARGV            = sg.ARGV();

var spec      = [];
var remainder = '';

var main = function() {

//console.log(ARGV.args);
  _.each(ARGV.args, function(arg) {
    var segments = sg.capturesSync(/^([^:]+):\/([^/]+)\/$/, arg), colorName;
console.log(segments);
    if (segments) {
      spec.push({name:segments[1].toUpperCase(), re: new RegExp(segments[2], 'ig')});
    }
  });
  console.log(spec);

  process.stdin.setEncoding('utf8');
  process.stdin.on('data', function(chunk) {
    var lines = (remainder + chunk).split('\n');
    remainder = lines.pop();
    _.each(lines, handleLine);
  });
};

var handleLine = function(line_) {
  var line        = line_;
  var handled     = false;
  var lineColored = false;
  var lineColor   = null;


  _.each(spec, function(item) {
    var newLine = '';
    var replacementSpec;
    var foundLineColor = false;
    var m;
    var matchFrom = 0;
    var remainder = '';

    var preColor        = color[item.name];
    if (color[item.name+'BOLD']) {
      preColor = color[item.name+'BOLD'];
    }

    if ((m = item.re.exec(line)) !== null) {
      handled = true;

      if (!lineColor) {
        lineColor = color[item.name];
        foundLineColor = true;
      }

      do {

        newLine += m.input.substr(matchFrom, m.index);
        newLine += preColor;
        newLine += m[0];
        newLine += color.NORMAL + lineColor;

        matchFrom = item.re.lastIndex;
        remainder = m.input.substr(matchFrom);

      } while ((m = item.re.exec(line)) !== null);

      newLine += remainder;

      if (foundLineColor) {
        newLine = lineColor + newLine + color.NORMAL;
      }

      line = newLine;

    }
  });

  //if (line !== line_) {
    process.stdout.write(line + '\n');
  //}
};

var color = {};
var NORMAL      = color.NORMAL         = "\033[0m";
var BOLD        = color.BOLD           = "\033[1m";
var RED         = color.RED            = "\033[31m";
var REDBOLD     = color.REDBOLD        = "\033[31;1m";
var GREEN       = color.GREEN          = "\033[32m";
var GREENBOLD   = color.GREENBOLD      = "\033[32;1m";
var YELLOW      = color.YELLOW         = "\033[33m";
var BLUE        = color.BLUE           = "\033[34m";
var BLUEBOLD    = color.BLUEBOLD       = "\033[35;1m";
var WHITE       = color.WHITE          = "\033[37m";
var WHITEBOLD   = color.WHITEBOLD      = "\033[37;1m";
var BLACK       = color.BLACK          = "\033[30m";
var BLACKBOLD   = color.BLACKBOLD      = "\033[30;1m";

//var RED         = color.RED            = "RED";
//var REDBOLD     = color.REDBOLD        = "REDBOLD";
//var BLUE        = color.BLUE           = "BLUE";
//var BLUEBOLD    = color.BLUEBOLD       = "BLUEBOLD";

main();

